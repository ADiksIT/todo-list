{"version":3,"sources":["index.module.sass","serviceWorker.js","index.js","redux/actions/todos.js","redux/reducers/listReducer.js","redux/actions/user.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","hooks/http.hook.js","utils/http.actions.js","components/Input.jsx","components/Form.jsx","components/todo/GroupBtnTodo.jsx","components/todo/Item.jsx","components/todo/List.jsx","components/NavBar.jsx","components/Auth.jsx","utils/ErrorBoundary.js","App.js","utils/onDragEnd.js","utils/storage.js"],"names":["module","exports","Boolean","window","location","hostname","match","store","addTodo","createAction","addAllTodo","toggleTodo","deleteTodo","changeTodo","clearTodo","initialState","listReducer","handleActions","state","payload","map","todo","id","completed","filter","text","userChange","userLogout","userStatus","userReducer","user","auth","_","status","rootReducer","combineReducers","list","useHttp","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","API_URL","Input","value","name","onChange","className","placeholder","type","e","Form","useState","setText","useSelector","dispatch","useDispatch","t","useTranslation","action","onSubmit","preventDefault","trim","length","alert","newTodo","Date","now","toString","apiAddTodo","target","GroupBtnTodo","data","btn","i","onClick","key","Item","index","setState","handlerChangeCompleted","apiChangeCompletedTodo","handlerChange","apiChangeTextTodo","buttonsData","apiDeleteTodo","draggableId","provided","s","ref","innerRef","draggableProps","dragHandleProps","defaultChecked","handlerInput","onFocus","select","List","droppableId","droppableProps","NavBar","score","setScore","i18n","href","changeLanguage","to","Modal","login","setLogin","password","setPassword","setStatus","authorize","errors","inputHandle","redirectAuth","ErrorBoundary","props","hasError","error","errorInfo","console","log","this","children","React","Component","languageList","App","useEffect","fetchData","catch","fallback","basename","exact","path","onDragEnd","destination","source","start","end","result","Array","from","splice","removed","handleDragEnd","persistedState","serializedState","localStorage","getItem","parse","err","load","createStore","subscribe","setItem","save","getState","i18next","init","interpolation","escapeValue","lng","resources","en","common","common_en","ru","common_ru","ReactDOM","render","I18nextProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.941212c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"collection-item\":\"src_collection-item__3iKRV\",\"icons\":\"src_icons__12r9A\",\"completed\":\"src_completed__1pKJi\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from \"redux\";\r\nimport { rootReducer } from \"./redux/reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from './App';\r\nimport {load, save} from \"./utils/storage\";\r\nimport i18next from \"i18next\";\r\nimport {I18nextProvider} from \"react-i18next\";\r\nimport common_en from './translations/en/common.json';\r\nimport common_ru from './translations/ru/common.json';\r\n\r\nconst persistedState = load();\r\n\r\nlet store;\r\nif (process.env.NODE_ENV === 'development') {\r\n  store = createStore(rootReducer, persistedState,\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n} else {\r\n  store = createStore(rootReducer, persistedState);\r\n}\r\n\r\nstore.subscribe(() => save(store.getState()))\r\n\r\ni18next.init({\r\n  interpolation: { escapeValue: false },\r\n  lng: 'en',\r\n  resources: {\r\n    en: {\r\n      common: common_en\r\n    },\r\n    ru: {\r\n      common: common_ru\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <I18nextProvider i18n={i18next}>\r\n      <App />\r\n    </I18nextProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {createAction} from \"redux-actions\";\r\n\r\nexport const addTodo = createAction('ADD_TODO')\r\nexport const addAllTodo = createAction('ADD_ALL_TODO')\r\nexport const toggleTodo = createAction('TOGGLE_TODO')\r\nexport const deleteTodo = createAction('DELETE_TODO')\r\nexport const changeTodo = createAction('CHANGE_TODO')\r\nexport const clearTodo = createAction('CLEAR_TODOS')\r\n","import {handleActions} from \"redux-actions\";\r\nimport {addAllTodo, addTodo, changeTodo, clearTodo, deleteTodo, toggleTodo} from \"../actions/todos\";\r\n\r\nexport const initialState = []\r\n\r\nexport const listReducer = handleActions (\r\n    {\r\n      [addAllTodo](state, {payload}) {\r\n        return [...payload]\r\n      },\r\n      [addTodo](state, {payload}) {\r\n        return [...state, {...payload}]\r\n      },\r\n      [toggleTodo](state, {payload}) {\r\n        return state.map(todo => todo.id === payload ? {...todo, completed: !todo.completed} : todo)\r\n      },\r\n      [deleteTodo](state, {payload}) {\r\n        return state.filter(todo => todo.id !== payload)\r\n      },\r\n      [changeTodo](state, {payload}) {\r\n        return state.map(todo => {\r\n          if (todo.id === payload.id) todo.text = payload.text\r\n          return todo\r\n        })\r\n      },\r\n      [clearTodo]() {\r\n        return initialState\r\n      }\r\n    }, initialState\r\n)\r\n","import {createAction} from \"redux-actions\";\r\n\r\nexport const userChange = createAction('USER_CHANGE')\r\nexport const userLogout = createAction('USER_LOGOUT')\r\nexport const userStatus = createAction('USER_STATUS')\r\n\r\n","import { handleActions } from \"redux-actions\";\r\nimport { userChange, userLogout, userStatus } from \"../actions/user\";\r\n\r\nexport const initialState = {user : '', id : '', auth: false, status: false};\r\nexport const userReducer = handleActions (\r\n    {\r\n      [userChange](state, {payload}) {\r\n        return {...state, user: payload.user, id: payload.id, auth: true}\r\n      },\r\n      [userLogout](state, _) {\r\n        return {...state, user: '', id: '', auth: false}\r\n      },\r\n      [userStatus](state, _) {\r\n        return {...state, status: !state.status}\r\n      }\r\n    }, initialState\r\n)\r\n","import { combineReducers } from 'redux'\r\nimport { listReducer } from \"./listReducer\";\r\nimport {userReducer} from \"./userReducer\";\r\n\r\nexport const rootReducer = combineReducers({ list: listReducer, user: userReducer })\r\n","import {useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    try {\r\n      if (body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n      const response = await fetch(url, {method, body, headers})\r\n      return await response.json()\r\n    } catch (e) {\r\n      throw e\r\n    }\r\n  }, [])\r\n  return { request }\r\n}\r\n","const API_URL = 'https://todo1111112.herokuapp.com';\r\n\r\nexport const apiReplace = (id, start, end) =>\r\n  `${API_URL}/api/todos/users/${id}/replace/start/${start}/end/${end}`;\r\n\r\nexport const apiAddTodo = (id) => `${API_URL}/api/todos/users/${id}`;\r\n\r\nexport const apiChangeTextTodo = (user, todo) =>\r\n  `${API_URL}/api/todos/users/${user}/change/text/${todo}`;\r\n\r\nexport const apiChangeCompletedTodo = (user, todo) =>\r\n  `${API_URL}/api/todos/users/${user}/change/completed/${todo}`;\r\n\r\nexport const apiGetTodos = (id) => `${API_URL}/api/todos/users/${id}`;\r\n\r\nexport const apiDeleteTodo = (user, todo) =>\r\n  `${API_URL}/api/todos/users/${user}/delete/${todo}`;\r\n\r\nexport const apiRegisterUser = () => `${API_URL}/api/auth/register_login`;\r\n\r\nexport const apiAddAllTodos = (id) => `${API_URL}/api/todos/users/${id}/add_all`;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport const Input = ({value, name, onChange, className, placeholder = ''}) => (\r\n      <div className=\"row\">\r\n        <div className=\"input-field col s12\">\r\n          <input\r\n              value={value}\r\n              name={name}\r\n              type=\"text\"\r\n              className={className}\r\n              onChange={(e) => onChange(e)}\r\n              placeholder={placeholder}\r\n          />\r\n          <label className=\"active\">{name}</label>\r\n        </div>\r\n      </div>\r\n);\r\n\r\nInput.propTypes = {\r\n  value: PropTypes.string,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { addTodo } from '../redux/actions/todos';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { apiAddTodo } from '../utils/http.actions';\r\nimport { Input} from \"./Input\";\r\n\r\nexport const Form = () => {\r\n  const [text, setText] = useState('');\r\n\r\n  const { id, auth } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const {t} = useTranslation('common');\r\n\r\n  const { request } = useHttp();\r\n\r\n  const handlerInput = ({ target }) => setText(target.value);\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (text.trim().length < 5) return alert(t('form.alert'))\r\n\r\n    const newTodo = {\r\n      text: text.trim(),\r\n      id: Date.now().toString(),\r\n      completed: false,\r\n    };\r\n\r\n    if (auth) {\r\n      request(apiAddTodo(id), 'POST', newTodo)\r\n    }\r\n\r\n    dispatch(addTodo(newTodo));\r\n    setText('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <form action=\"submit\" onSubmit={handlerSubmit}>\r\n        <div className=\"file-field input-field\">\r\n          <button className=\"btn\" type=\"submit\">\r\n            <span>{t('form.btn')}</span>\r\n          </button>\r\n          <div className=\"file-path-wrapper\">\r\n            <Input\r\n                name={t('form.label')}\r\n                value={text}\r\n                onChange={handlerInput}\r\n                placeholder={t('form.placeholder')}\r\n                className='file-path validate'\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const GroupBtnTodo = ( {data, className} ) => (\r\n    <div className={className}>\r\n      {data.map((btn, i) => <i className=\"material-icons\" onClick={() => btn.onClick()} key={i}> {btn.text} </i>)}\r\n    </div>\r\n);\r\n\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeTodo, deleteTodo, toggleTodo } from '../../redux/actions/todos';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../../index.module.sass';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  apiChangeTextTodo,\r\n  apiDeleteTodo,\r\n  apiChangeCompletedTodo,\r\n} from '../../utils/http.actions';\r\nimport { GroupBtnTodo } from \"./GroupBtnTodo\";\r\n\r\nexport const Item = ({ todo, index }) => {\r\n  const [text, setText] = useState(todo?.text ?? 'error text');\r\n  const [state, setState] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const { request } = useHttp();\r\n\r\n  const handlerInput = ({ target }) => {\r\n    setText(target.value);\r\n  };\r\n\r\n  const handlerChangeCompleted = () => {\r\n    if (user.auth) {\r\n      request(apiChangeCompletedTodo(user.id, todo.id), 'POST', {\r\n        completed: !todo.completed,\r\n      });\r\n    }\r\n\r\n    dispatch(toggleTodo(todo.id));\r\n  }\r\n\r\n  const handlerChange = () => {\r\n    if (!text.trim()) {\r\n      return;\r\n    }\r\n\r\n    if (state) {\r\n      if (user.auth) {\r\n        request(apiChangeTextTodo(user.id, todo.id), 'POST', { text });\r\n      }\r\n      dispatch(changeTodo({ text, id: todo.id }));\r\n    }\r\n\r\n    setState(!state);\r\n  };\r\n\r\n  const handlerDeleteTodo = () => {\r\n    if (user.auth) {\r\n      request(apiDeleteTodo(user.id, todo.id), 'GET');\r\n    }\r\n    dispatch(deleteTodo(todo.id));\r\n  }\r\n\r\n  const buttonsData = [{text: 'create', onClick: handlerChange}, {text: 'delete', onClick: handlerDeleteTodo}]\r\n\r\n  return (\r\n    <Draggable draggableId={todo.id} index={index} key={index}>\r\n      {(provided) => (\r\n        <li\r\n          className={\r\n            todo?.completed\r\n              ? `${s['collection-item']} ${s['completed']}`\r\n              : s['collection-item']\r\n          }\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <label onChange={() => handlerChangeCompleted()} >\r\n            <input type=\"checkbox\" defaultChecked={todo.completed} />\r\n            <span>''</span>\r\n          </label>\r\n\r\n          {state ? (\r\n            <form action=\"#\" onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handlerChange();\r\n              }}\r\n            >\r\n              <input type=\"text\" value={text}\r\n                onChange={(e) => handlerInput(e)}\r\n                onFocus={(e) => e.target.select()}\r\n              />\r\n            </form>\r\n          ) : (\r\n            <span>{text}</span>\r\n          )}\r\n\r\n          <GroupBtnTodo data={buttonsData} className={s['icons']}/>\r\n\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nItem.propTypes = {\r\n  todo: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Item } from './Item';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nexport const List = () => {\r\n  const list = useSelector((state) => state.list);\r\n  const {t} = useTranslation('common');\r\n\r\n  return (\r\n    <Droppable droppableId={Date.now().toString()}>\r\n      {(provided) => (\r\n        <ul\r\n          className=\"collection with-header\"\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          {list?.length ? (\r\n            list.map((todo, i) => <Item index={i} todo={todo} key={todo?.id || i} />)\r\n          ) : (\r\n            <h5>{t('list.clear_list')}</h5>\r\n          )}\r\n          {provided.placeholder}\r\n        </ul>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userLogout } from \"../redux/actions/user\";\r\nimport { clearTodo } from \"../redux/actions/todos\";\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const NavBar = ({data}) => {\r\n  const [score, setScore] = useState(0)\r\n\r\n  const { user } = useSelector(state => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const {t, i18n} = useTranslation('common');\r\n\r\n  const logOutHandle = () => {\r\n    if (user) {\r\n      dispatch(userLogout())\r\n      dispatch(clearTodo())\r\n    }\r\n  }\r\n\r\n  //so happened\r\n  const languageHandle = () => {\r\n    setScore(score + 1)\r\n    if (score >= data.length - 1) setScore(0)\r\n    i18n.changeLanguage(data[score]);\r\n  }\r\n\r\n  return (\r\n      <nav>\r\n        <div className='nav-wrapper container'>\r\n          <a href=\"/\" className=\"brand-logo\">{t('nav_bar.title')}</a>\r\n          <ul id=\"nav-mobile\" className=\"right\">\r\n            <li onClick={() => languageHandle()}>\r\n              <a href='#'><i className=\"material-icons\">language</i></a>\r\n            </li>\r\n\r\n            {user ? <li><Link to='/'>{user}</Link></li> : ''}\r\n\r\n            <li onClick={() => logOutHandle()}>\r\n              <Link to='/auth'>{user ? t('nav_bar.btn_logOut') : t('nav_bar.btn_logIn') }</Link>\r\n            </li>\r\n\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n\r\nNavBar.propTypes = {\r\n  data: PropTypes.array\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { userChange, userStatus } from '../redux/actions/user';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { apiRegisterUser } from '../utils/http.actions';\r\nimport { Input } from \"./Input\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nexport const Modal = () => {\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const {t} = useTranslation('common');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { request } = useHttp();\r\n\r\n  const redirectAuth = (status) => (status ? <Redirect to=\"/list\" /> : '');\r\n\r\n  const authorize = async () => {\r\n\r\n    if (login.trim() === '' || password.trim() === '') {\r\n      alert(t('auth.alert'))\r\n      return\r\n    }\r\n\r\n    const response = await request(apiRegisterUser(), 'POST', {login, password});\r\n\r\n    if (!response.errors) {\r\n      dispatch(userChange(response));\r\n      dispatch(userStatus());\r\n      return setStatus(true);\r\n    }\r\n\r\n    alert(response.errors);\r\n  };\r\n\r\n  const inputHandle = ({target}) => target.name === t('auth.name_login') ? setLogin(target.value.trim()) : setPassword(target.value.trim())\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m12\">\r\n        <div className=\"card blue-grey darken-3 \">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">{t('auth.title')}</span>\r\n            <div className=\"container\">\r\n              <Input onChange={inputHandle} value={login} name={t('auth.name_login')} className='validate'/>\r\n              <Input onChange={inputHandle} value={password} name={t('auth.name_password')} className='validate'/>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            {redirectAuth(status)}\r\n            <a onClick={() => authorize()}>{t('auth.btn')}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: '' };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Что-то пошло не так. Error: {this.state.error}</h1>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n","import React, {Suspense, useEffect} from 'react';\r\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAllTodo } from './redux/actions/todos';\r\nimport { Form } from './components/Form';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { List } from './components/todo/List';\r\nimport { NavBar } from './components/NavBar';\r\nimport { Modal } from './components/Auth';\r\nimport { useHttp } from './hooks/http.hook';\r\nimport { handleDragEnd } from \"./utils/onDragEnd\";\r\nimport { apiAddAllTodos, apiReplace} from './utils/http.actions';\r\nimport { ErrorBoundary } from './utils/ErrorBoundary';\r\nimport { userStatus} from \"./redux/actions/user\";\r\n\r\nconst languageList = ['ru', 'en'];\r\n\r\nconst App = () => {\r\n  const { list, user } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { request } = useHttp();\r\n\r\n  const onDragEnd = ({ destination, source }) => {\r\n    if (!destination) return;\r\n    const result = handleDragEnd({destination, source, list})\r\n\r\n    dispatch(addAllTodo(result));\r\n    if (user.auth) {\r\n      request(apiReplace(user.id, destination.index, source.index));\r\n    }\r\n  };\r\n\r\n  useEffect( () => {\r\n    const fetchData = async () => {\r\n      if (user.status) {\r\n        const response = await request(apiAddAllTodos(user.id), 'POST', {data: list});\r\n        dispatch(addAllTodo(response));\r\n        dispatch(userStatus());\r\n      }\r\n    };\r\n    fetchData().catch(e => console.error(e))\r\n  }, [user.status]);\r\n\r\n\r\n  return (\r\n      <Suspense fallback='loading'>\r\n        <HashRouter basename='/'>\r\n          <main>\r\n            <ErrorBoundary>\r\n              <NavBar data={languageList}/>\r\n              <div className=\"container\">\r\n                <Switch>\r\n                  <Route exact path=\"/\">\r\n                    <Redirect to=\"/list\" />\r\n                  </Route>\r\n                  <Route path=\"/auth\">\r\n                    <Modal />\r\n                  </Route>\r\n                  <Route path=\"/list\">\r\n                    <Form />\r\n                    <DragDropContext onDragEnd={onDragEnd}>\r\n                      <List />\r\n                    </DragDropContext>\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n            </ErrorBoundary>\r\n          </main>\r\n        </HashRouter>\r\n      </Suspense>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const handleDragEnd = ({destination, source, list}) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(source.index, 1);\r\n\r\n  result.splice(destination.index, 0, removed);\r\n\r\n  return result;\r\n}\r\n","import {initialState} from \"../redux/reducers/listReducer\";\r\n\r\nexport const save = (state) => {\r\n  try {\r\n    return localStorage.setItem('state', JSON.stringify(state))\r\n  } catch (e) {\r\n    console.error('Error localstorage', e)\r\n    return initialState\r\n  }\r\n};\r\n\r\nexport const load = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (!serializedState) {\r\n      return initialState;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return initialState;\r\n  }\r\n}\r\n"],"sourceRoot":""}