{"version":3,"sources":["serviceWorker.js","index.js","redux/actions/actions.js","redux/reducers/listReducer.js","redux/reducers/rootReducer.js","components/Form.jsx","components/Item.jsx","components/List.jsx","components/NavBar.jsx","utils/ErrorBoundary.js","App.js","storage.js","index.module.sass"],"names":["Boolean","window","location","hostname","match","store","addTodo","createAction","toggleTodo","deleteTodo","changeTodo","initialState","text","id","Date","now","toString","completed","listReducer","handleActions","state","payload","map","todo","filter","rootReducer","combineReducers","list","Form","dispatch","useDispatch","useState","setText","className","action","onSubmit","e","preventDefault","trim","length","newTodo","type","value","onChange","target","placeholder","Item","setState","handlerChange","s","defaultChecked","handlerInput","onFocus","select","onClick","List","useSelector","key","NavBar","href","ErrorBoundary","props","hasError","error","errorInfo","console","log","this","children","React","Component","App","persistedState","serializedState","localStorage","getItem","JSON","parse","err","load","createStore","subscribe","setItem","stringify","save","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.cf1acf44.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"./redux/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport { load, save } from \"./storage\";\nimport App from './App';\n\nconst persistedState = load();\n\nlet store;\nif (process.env.NODE_ENV === 'development') {\n  store = createStore(rootReducer, persistedState,\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n} else {\n  store = createStore(rootReducer, persistedState);\n}\n\nstore.subscribe(() => save(store.getState()))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createAction} from \"redux-actions\";\r\n\r\nexport const addTodo = createAction('ADD_TODO')\r\nexport const toggleTodo = createAction('TOGGLE_TODO')\r\nexport const deleteTodo = createAction('DELETE_TODO')\r\nexport const changeTodo = createAction('CHANGE_TODO')\r\n","import {handleActions} from \"redux-actions\";\r\nimport {addTodo, changeTodo, deleteTodo, toggleTodo} from \"../actions/actions\";\r\n\r\nexport const initialState = [{text: 'Add your first TO-DO', id: Date.now().toString(), completed: false}]\r\n\r\nexport const listReducer = handleActions (\r\n    {\r\n      [addTodo](state, {payload}) {\r\n        return [...state, {...payload}]\r\n      },\r\n      [toggleTodo](state, {payload}) {\r\n        return state.map(todo => todo.id === payload ? {...todo, completed: !todo.completed} : todo)\r\n      },\r\n      [deleteTodo](state, {payload}) {\r\n        return state.filter(todo => todo.id !== payload)\r\n      },\r\n      [changeTodo](state, {payload}) {\r\n        return state.map(todo => {\r\n          if (todo.id === payload.id) todo.text = payload.text\r\n          return todo\r\n        })\r\n      }\r\n    }, initialState\r\n)\r\n","import { combineReducers } from 'redux'\r\nimport { listReducer } from \"./listReducer\";\r\n\r\nexport const rootReducer = combineReducers({ list: listReducer })\r\n","import React, { useState } from 'react';\r\nimport { addTodo } from '../redux/actions/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const Form = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const handlerInput = ({ target }) => setText(target.value);\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (text.trim().length < 5) return;\r\n\r\n    const newTodo = {\r\n      text: text.trim(),\r\n      id: Date.now().toString(),\r\n      completed: false\r\n    }\r\n\r\n    dispatch(addTodo(newTodo));\r\n    setText('');\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <form action=\"submit\" onSubmit={handlerSubmit}>\r\n        <div className=\"file-field input-field\">\r\n          <button className=\"btn\" type=\"submit\">\r\n            <span>Add</span>\r\n          </button>\r\n          <div className=\"file-path-wrapper\">\r\n            <input\r\n              className=\"file-path validate\"\r\n              value={text}\r\n              onChange={handlerInput}\r\n              type=\"text\"\r\n              placeholder=\"Add your todo (min 5 symbols)\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeTodo, deleteTodo, toggleTodo } from '../redux/actions/actions';\r\nimport PropTypes from 'prop-types'\r\nimport s from '../index.module.sass'\r\n\r\nexport const Item = ({ todo }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, setText] = useState(todo.text ?? 'error text');\r\n  const [state, setState] = useState(false);\r\n\r\n  const handlerInput = ({ target }) => {\r\n    setText(target.value);\r\n  };\r\n\r\n  const handlerChange = () => {\r\n    if (!text.trim()) {\r\n      return;\r\n    }\r\n\r\n    if (state) {\r\n      dispatch(changeTodo({ text, id: todo.id }));\r\n    }\r\n\r\n    setState(!state);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className={\r\n        todo?.completed ? `${s['collection-item']} ${s['completed']}` : s['collection-item']\r\n      }\r\n    >\r\n      <label\r\n        onChange={() => {\r\n          dispatch(toggleTodo(todo.id));\r\n        }}\r\n      >\r\n        <input type=\"checkbox\" defaultChecked={todo.completed} />\r\n        <span>''</span>\r\n      </label>\r\n\r\n      {state ? (\r\n        <form\r\n          action=\"#\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handlerChange();\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => handlerInput(e)}\r\n            onFocus={(e) => e.target.select()}\r\n          />\r\n        </form>\r\n      ) : (\r\n        <span>{text}</span>\r\n      )}\r\n\r\n      <div className={s[\"icons\"]}>\r\n        <i className=\"material-icons\" onClick={() => handlerChange()}>\r\n          create\r\n        </i>\r\n        <i className=\"material-icons\" onClick={() => dispatch(deleteTodo(todo.id))}>\r\n          cancel\r\n        </i>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nItem.propTypes = {\r\n  todo: PropTypes.object,\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Item } from './Item';\r\nimport {initialState} from \"../redux/reducers/listReducer\";\r\n\r\nexport const List = () => {\r\n  const list = useSelector((state) => state.list ?? initialState);\r\n\r\n  return (\r\n        <ul className=\"collection with-header\">\r\n          {list?.length ? (\r\n              list.map((todo) => <Item todo={todo} key={todo.id} />)\r\n          ) : (\r\n              <h5>Your list clear</h5>\r\n          )}\r\n        </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n      <nav>\r\n        <div className='nav-wrapper container'>\r\n          <a href=\"/\" className=\"brand-logo\">TO-DO APP</a>\r\n          <ul id=\"nav-mobile\" className=\"right\">\r\n            <li><a href=\"https://github.com/ADiksIT\">GitHub</a></li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: '' };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Что-то пошло не так. Error: {this.state.error}</h1>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\nimport { Form } from \"./components/Form\";\nimport { List } from \"./components/List\";\nimport { NavBar } from \"./components/NavBar\";\nimport {ErrorBoundary} from \"./utils/ErrorBoundary\";\n\nconst App = () => {\n  return (\n    <main>\n      <ErrorBoundary>\n        <NavBar/>\n      <div className=\"container\">\n          <Form />\n          <List />\n      </div>\n      </ErrorBoundary>\n    </main>\n  );\n}\n\nexport default App;\n","import {initialState} from \"./redux/reducers/listReducer\";\r\n\r\nexport const save = (state) => {\r\n  try {\r\n    return localStorage.setItem('state', JSON.stringify(state))\r\n  } catch (e) {\r\n    console.error('Error localstorage', e)\r\n    return initialState\r\n  }\r\n};\r\n\r\nexport const load = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n     if (!serializedState) {\r\n       return initialState;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return initialState;\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collection-item\":\"src_collection-item__3iKRV\",\"icons\":\"src_icons__12r9A\",\"completed\":\"src_completed__1pKJi\"};"],"sourceRoot":""}