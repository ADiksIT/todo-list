{"version":3,"sources":["index.module.sass","serviceWorker.js","index.js","redux/actions/actions.js","redux/reducers/listReducer.js","redux/actions/user.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","hooks/http.hook.js","http.actions.js","components/Form.jsx","components/Item.jsx","components/List.jsx","components/NavBar.jsx","utils/ErrorBoundary.js","components/Modal.jsx","App.js"],"names":["module","exports","Boolean","window","location","hostname","match","store","addTodo","createAction","addAllTodo","toggleTodo","deleteTodo","changeTodo","clearTodo","initialState","listReducer","handleActions","state","payload","map","todo","id","completed","filter","text","userChange","userLogout","userReducer","user","rootReducer","combineReducers","list","useHttp","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","apiGetTodos","Form","useState","setText","useSelector","dispatch","useDispatch","className","action","onSubmit","e","preventDefault","alert","trim","length","newTodo","Date","now","toString","apiAddTodo","type","value","onChange","target","placeholder","Item","index","setState","handlerChange","apiChangeTextTodo","draggableId","key","provided","s","ref","innerRef","draggableProps","dragHandleProps","apiChangeCompletedTodo","defaultChecked","handlerInput","onFocus","select","onClick","apiDeleteTodo","List","localUser","parse","localStorage","getItem","useEffect","fetchData","droppableId","droppableProps","i","NavBar","href","to","ErrorBoundary","props","hasError","error","errorInfo","console","log","this","children","React","Component","Modal","login","setLogin","password","setPassword","status","setStatus","authorize","errors","setItem","name","redirectAuth","App","path","onDragEnd","destination","source","start","end","result","Array","from","splice","removed","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.303fadf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"collection-item\":\"src_collection-item__3iKRV\",\"icons\":\"src_icons__12r9A\",\"completed\":\"src_completed__1pKJi\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from \"redux\";\r\nimport { rootReducer } from \"./redux/reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from './App';\r\n\r\nlet store;\r\nif (process.env.NODE_ENV === 'development') {\r\n  store = createStore(rootReducer,\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n} else {\r\n  store = createStore(rootReducer);\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {createAction} from \"redux-actions\";\r\n\r\nexport const addTodo = createAction('ADD_TODO')\r\nexport const addAllTodo = createAction('ADD_ALL_TODO')\r\nexport const toggleTodo = createAction('TOGGLE_TODO')\r\nexport const deleteTodo = createAction('DELETE_TODO')\r\nexport const changeTodo = createAction('CHANGE_TODO')\r\nexport const clearTodo = createAction('CLEAR_TODOS')\r\n","import {handleActions} from \"redux-actions\";\r\nimport {addAllTodo, addTodo, changeTodo, clearTodo, deleteTodo, toggleTodo} from \"../actions/actions\";\r\n\r\nexport const initialState = []\r\n\r\nexport const listReducer = handleActions (\r\n    {\r\n      [addAllTodo](state, {payload}) {\r\n        return [...payload]\r\n      },\r\n      [addTodo](state, {payload}) {\r\n        return [...state, {...payload}]\r\n      },\r\n      [toggleTodo](state, {payload}) {\r\n        return state.map(todo => todo.id === payload ? {...todo, completed: !todo.completed} : todo)\r\n      },\r\n      [deleteTodo](state, {payload}) {\r\n        return state.filter(todo => todo.id !== payload)\r\n      },\r\n      [changeTodo](state, {payload}) {\r\n        return state.map(todo => {\r\n          if (todo.id === payload.id) todo.text = payload.text\r\n          return todo\r\n        })\r\n      },\r\n      [clearTodo](state, {payload}) {\r\n        return initialState\r\n      }\r\n    }, initialState\r\n)\r\n","import {createAction} from \"redux-actions\";\r\n\r\nexport const userChange = createAction('USER_CHANGE')\r\nexport const userLogout = createAction('USER_LOGOUT')\r\n\r\n","import {handleActions} from \"redux-actions\";\r\nimport {userChange, userLogout} from \"../actions/user\";\r\n\r\nexport const initialState = {user : '', id : ''};\r\nexport const userReducer = handleActions (\r\n    {\r\n      [userChange](state, {payload}) {\r\n        return {user: payload.user, id: payload.id}\r\n      },\r\n      [userLogout](state, {payload}) {\r\n        return {...state, user: '', id: ''}\r\n      }\r\n\r\n    }, initialState\r\n)\r\n","import { combineReducers } from 'redux'\r\nimport { listReducer } from \"./listReducer\";\r\nimport {userReducer} from \"./userReducer\";\r\n\r\nexport const rootReducer = combineReducers({ list: listReducer, user: userReducer })\r\n","import {useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    try {\r\n      if (body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n      const response = await fetch(url, {method, body, headers})\r\n      return await response.json()\r\n    } catch (e) {\r\n      throw e\r\n    }\r\n  }, [])\r\n  return { request }\r\n}\r\n","export const apiReplace = (id, start, end) =>\r\n  `https://todo1111112.herokuapp.com/api/todos/users/${id}/replace/start/${start}/end/${end}`;\r\n\r\nexport const apiAddTodo = (id) => `https://todo1111112.herokuapp.com/api/todos/users/${id}`;\r\n\r\nexport const apiChangeTextTodo = (user, todo) =>\r\n  `https://todo1111112.herokuapp.com/api/todos/users/${user}/change/text/${todo}`;\r\n\r\nexport const apiChangeCompletedTodo = (user, todo) =>\r\n  `https://todo1111112.herokuapp.com/api/todos/users/${user}/change/completed/${todo}`;\r\n\r\nexport const apiGetTodos = (id) => `https://todo1111112.herokuapp.com/api/todos/users/${id}`;\r\n\r\nexport const apiDeleteTodo = (user, todo) =>\r\n  `https://todo1111112.herokuapp.com/api/todos/users/${user}/delete/${todo}`;\r\n\r\nexport const apiRegisterUser = () => 'https://todo1111112.herokuapp.com/api/auth/register_login';\r\n","import React, { useState } from 'react';\r\nimport { addTodo } from '../redux/actions/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { apiAddTodo } from '../http.actions';\r\n\r\nexport const Form = () => {\r\n  const [text, setText] = useState('');\r\n\r\n  const { id } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const { request } = useHttp();\r\n\r\n  const handlerInput = ({ target }) => setText(target.value);\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!id) return alert('Войдите вначале в систему!!!');\r\n\r\n    if (text.trim().length < 5) return;\r\n\r\n    const newTodo = {\r\n      text: text.trim(),\r\n      id: Date.now().toString(),\r\n      completed: false,\r\n    };\r\n\r\n    request(apiAddTodo(id), 'POST', newTodo);\r\n    dispatch(addTodo(newTodo));\r\n    setText('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <form action=\"submit\" onSubmit={handlerSubmit}>\r\n        <div className=\"file-field input-field\">\r\n          <button className=\"btn\" type=\"submit\">\r\n            <span>Add</span>\r\n          </button>\r\n          <div className=\"file-path-wrapper\">\r\n            <input\r\n              className=\"file-path validate\"\r\n              value={text}\r\n              onChange={handlerInput}\r\n              type=\"text\"\r\n              placeholder=\"Add your todo (min 5 symbols)\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeTodo, deleteTodo, toggleTodo } from '../redux/actions/actions';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../index.module.sass';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  apiChangeTextTodo,\r\n  apiDeleteTodo,\r\n  apiChangeCompletedTodo,\r\n} from '../http.actions';\r\n\r\nexport const Item = ({ todo, index }) => {\r\n  const [text, setText] = useState(todo.text ?? 'error text');\r\n  const [state, setState] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const { request } = useHttp();\r\n\r\n  const handlerInput = ({ target }) => {\r\n    setText(target.value);\r\n  };\r\n\r\n  const handlerChange = () => {\r\n    if (!text.trim()) {\r\n      return;\r\n    }\r\n\r\n    if (state) {\r\n      request(apiChangeTextTodo(user.id, todo.id), 'POST', { text });\r\n      dispatch(changeTodo({ text, id: todo.id }));\r\n    }\r\n\r\n    setState(!state);\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={todo.id} index={index} key={index}>\r\n      {(provided) => (\r\n        <li\r\n          className={\r\n            todo?.completed\r\n              ? `${s['collection-item']} ${s['completed']}`\r\n              : s['collection-item']\r\n          }\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <label\r\n            onChange={() => {\r\n              request(apiChangeCompletedTodo(user.id, todo.id), 'POST', {\r\n                completed: !todo.completed,\r\n              });\r\n              dispatch(toggleTodo(todo.id));\r\n            }}\r\n          >\r\n            <input type=\"checkbox\" defaultChecked={todo.completed} />\r\n            <span>''</span>\r\n          </label>\r\n\r\n          {state ? (\r\n            <form\r\n              action=\"#\"\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handlerChange();\r\n              }}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                value={text}\r\n                onChange={(e) => handlerInput(e)}\r\n                onFocus={(e) => e.target.select()}\r\n              />\r\n            </form>\r\n          ) : (\r\n            <span>{text}</span>\r\n          )}\r\n\r\n          <div className={s['icons']}>\r\n            <i className=\"material-icons\" onClick={() => handlerChange()}>\r\n              create\r\n            </i>\r\n            <i\r\n              className=\"material-icons\"\r\n              onClick={() => {\r\n                request(apiDeleteTodo(user.id, todo.id), 'GET');\r\n                dispatch(deleteTodo(todo.id));\r\n              }}\r\n            >\r\n              cancel\r\n            </i>\r\n          </div>\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nItem.propTypes = {\r\n  todo: PropTypes.object,\r\n};\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Item } from './Item';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { addAllTodo } from '../redux/actions/actions';\r\nimport { userChange } from '../redux/actions/user';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { apiGetTodos } from '../http.actions';\r\n\r\nexport const List = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const list = useSelector((state) => state.list);\r\n  const { id } = useSelector((state) => state.user);\r\n\r\n  const localUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n  const { request } = useHttp();\r\n\r\n  useEffect(\r\n    useCallback(() => {\r\n      const fetchData = async () => {\r\n        const response = await request(apiGetTodos(id || localUser.id));\r\n        dispatch(addAllTodo(response));\r\n        dispatch(userChange(localUser));\r\n      };\r\n      fetchData();\r\n    }, [dispatch, id, localUser, request]),\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <Droppable droppableId={Date.now().toString()}>\r\n      {(provided) => (\r\n        <ul\r\n          className=\"collection with-header\"\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          {list?.length ? (\r\n            list.map((todo, i) => <Item index={i} todo={todo} key={todo.id} />)\r\n          ) : (\r\n            <h5>Your list clear</h5>\r\n          )}\r\n          {provided.placeholder}\r\n        </ul>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {userLogout} from \"../redux/actions/user\";\r\nimport {clearTodo} from \"../redux/actions/actions\";\r\n\r\nexport const NavBar = () => {\r\n  const user = useSelector(state => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n      <nav>\r\n        <div className='nav-wrapper container'>\r\n          <a href=\"/\" className=\"brand-logo\">TO-DO APP</a>\r\n          <ul id=\"nav-mobile\" className=\"right\">\r\n            {user.user ? <li><Link to='/'>{user.user}</Link></li> : ''}\r\n            <li onClick={() => {\r\n              dispatch(userLogout())\r\n              dispatch(clearTodo())\r\n            }}>\r\n              <Link to='/auth'>{user.user ? 'LogOut' : 'LogIn'}</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: '' };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Что-то пошло не так. Error: {this.state.error}</h1>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { userChange } from '../redux/actions/user';\r\nimport { apiRegisterUser } from '../http.actions';\r\n\r\nexport const Modal = () => {\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [status, setStatus] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { request } = useHttp();\r\n\r\n  const redirectAuth = (status) => (status ? <Redirect to=\"/todo-list\" /> : '');\r\n\r\n  const authorize = async () => {\r\n    const response = await request(apiRegisterUser(), 'POST', {\r\n      login,\r\n      password,\r\n    });\r\n    if (!response.errors) {\r\n      dispatch(userChange(response));\r\n      localStorage.setItem('user', JSON.stringify(response));\r\n      return setStatus(true);\r\n    }\r\n    alert(response.errors);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m12\">\r\n        <div className=\"card blue-grey darken-3 \">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Auth</span>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    value={login}\r\n                    name=\"login\"\r\n                    type=\"text\"\r\n                    className=\"validate\"\r\n                    onChange={({ target }) => {\r\n                      setLogin(target.value);\r\n                    }}\r\n                  />\r\n                  <label className=\"active\">LogIn</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    value={password}\r\n                    name=\"password\"\r\n                    type=\"text\"\r\n                    className=\"validate\"\r\n                    onChange={({ target }) => {\r\n                      setPassword(target.value);\r\n                    }}\r\n                  />\r\n                  <label className=\"active\">Password</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            {redirectAuth(status)}\r\n            <a onClick={() => authorize()}>Authorize</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Form } from './components/Form';\r\nimport { List } from './components/List';\r\nimport { NavBar } from './components/NavBar';\r\nimport { ErrorBoundary } from './utils/ErrorBoundary';\r\nimport { Modal } from './components/Modal';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAllTodo } from './redux/actions/actions';\r\nimport { useHttp } from './hooks/http.hook';\r\nimport { apiReplace } from './http.actions';\r\n\r\nconst App = () => {\r\n  const { list, user } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { request } = useHttp();\r\n\r\n  const onDragEnd = ({ destination, source }) => {\r\n    if (!destination) return;\r\n\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(source.index, 1);\r\n    result.splice(destination.index, 0, removed);\r\n\r\n    dispatch(addAllTodo(result));\r\n    request(apiReplace(user.id, destination.index, source.index));\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <main>\r\n        <ErrorBoundary>\r\n          <NavBar />\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route path=\"/auth\">\r\n                <Modal />\r\n              </Route>\r\n              <Route path=\"/todo-list\">\r\n                <Form />\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                  <List />\r\n                </DragDropContext>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </ErrorBoundary>\r\n      </main>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}